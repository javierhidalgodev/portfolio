---
import '@fontsource-variable/archivo';
import Footer from "../components/Footer.astro";
import License from '../components/License.astro'

interface Props {
	title: string
}

const { title } = Astro.props
---

<html lang="es" class="dark">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/portfolio/favicon.svg" />
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-YLH2HCQTD6"></script>
		<script is:inline>
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());

			gtag('config', 'G-YLH2HCQTD6');
		</script>
		<title>{title}</title>
	</head>
	<body class=" h-screen flex flex-col items-center">
		<slot />
		<Footer />
		<License />
	</body>
</html>

<style is:global>
  :root {
    color-scheme: dark;
		font-family: 'Archivo', sans-serif;
		--primary: #fefefe;
		--secondary: #191919; 
		--accent-color: #02241d;
		--accent-color-variant: #dbff00;
		--html-color: #dd4b25;
		--css-color: #2173f7;
		--js-color: #efd81d;
		--react-color: #149eca;
		--astro-color: #e63ba8;
		--vite-color: #ffbc14;
		--bootstrap-color: #7c10f7;
		--tailwind-color: #38bdf8;
		--node-color: #63b649;
		--express-color: #020202;
		--sql-color: #b91c1c;
		--mongodb-color:#b1ff05;
  }
  
	html {
		scroll-behavior: smooth;
		color: var(--secondary);
		background-color: var(--primary);

		transition: 150ms;
	}
	
	html.dark {
		--primary: #191919; 
		--secondary: #fefefe;
		--accent-color: #dbff00;
		--accent-color-variant: #02241d;
		color: var(--secondary);
		background-color: var(--primary);
	}
</style>

<script>
	const menuHamburgerBtn = document.getElementById('menu-hamburger-btn')
	const menuDefault = document.getElementById('menu-default')
	const menuLinks = Array.from(menuDefault.getElementsByTagName('a'))

	menuHamburgerBtn.addEventListener('click', () => {
		menuDefault.ariaExpanded === 'true'
			? menuDefault.ariaExpanded = 'false'
			: menuDefault.ariaExpanded = 'true'

		menuDefault.classList.toggle('hidden')

		menuDefault.classList.contains('hidden')
			? document.body.classList.remove('overflow-hidden')
			: document.body.classList.add('overflow-hidden')
		})
		
		menuLinks.forEach(mL => mL.addEventListener('click', () => {
			menuDefault.ariaExpanded === 'true' && menuDefault.classList.toggle('hidden')
			menuDefault.ariaExpanded = 'false'
			document.body.classList.remove('overflow-hidden')
	}))

	const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

	const themeBtns = document.querySelectorAll(".theme-toggle")
  themeBtns.forEach(thBtn => thBtn.addEventListener("click", handleToggleClick));
</script>